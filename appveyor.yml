#
# Build system for the PopSift library, including its demo programs.
#
version: '1.0.{build}'

image: Visual Studio 2022

platform:
  - x64

configuration:
  - Release
  - Debug

#environment:
#  matrix:
#    - DBUILD_SHARED_LIBS: 0
#    - DBUILD_SHARED_LIBS: 1

#
# Check the separate file cudaInstallAppveyor for the installation of CUDA
#
install:
    - cmd: >-
          call cudaInstallAppveyor.cmd
    - vcpkg upgrade --no-dry-run
    - vcpkg install
          boost-system boost-program-options boost-thread boost-filesystem
          --triplet %PLATFORM%-windows
          # devil

#
# When updating to a new version of visual studio, change the generation string after
# -G and find the suitable toolkit version that is listed after -T (v143 in this case).
# The CUDA Toolkit and the VS version must match. The matches are found in the CUDA
# documentation.
# The platform in this case is x64. Apparently, you need in after -T for VS and after -A
# for CUDA.
# You can only have one -T parameter, but you can separate several options with a comma.
#
# PopSift_USE_GRID_FILTER is off in this build because the installation of CUDA Thrust
# in cudaInstallAppveyor is not happening yet.
#
before_build:
    - md build
    - cd build
    - cmake -G "Visual Studio 17 2022" -A x64 -T v143,host=x64,cuda="%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v12.5" -DBUILD_SHARED_LIBS:BOOL=ON -DPopSift_USE_NVTX_PROFILING:BOOL=OFF -DPopSift_USE_GRID_FILTER:BOOL=OFF -DPopSift_BUILD_DOCS:BOOL=OFF -DPopSift_USE_POSITION_INDEPENDENT_CODE:BOOL=ON -DPopSift_BUILD_EXAMPLES:BOOL=ON -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake ..
    - ls -l

build:
  verbosity: detailed
  project: $(APPVEYOR_BUILD_FOLDER)\build\PopSift.sln
  parallel: true

cache:
  - c:\tools\vcpkg\installed\
